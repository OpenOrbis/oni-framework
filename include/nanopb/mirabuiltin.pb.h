/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Tue Oct 16 17:19:47 2018. */

#ifndef PB_MIRABUILTIN_PB_H_INCLUDED
#define PB_MIRABUILTIN_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MessageCategory {
    MessageCategory_NONE = 0,
    MessageCategory_SYSTEM = 1,
    MessageCategory_LOG = 2,
    MessageCategory_DEBUG = 3,
    MessageCategory_FILE = 4,
    MessageCategory_CMD = 5,
    MessageCategory_MAX = 6
} MessageCategory;
#define _MessageCategory_MIN MessageCategory_NONE
#define _MessageCategory_MAX MessageCategory_MAX
#define _MessageCategory_ARRAYSIZE ((MessageCategory)(MessageCategory_MAX+1))

/* Struct definitions */
typedef struct _MessageHeader {
    MessageCategory category;
    uint32_t type;
    int32_t error;
/* @@protoc_insertion_point(struct:MessageHeader) */
} MessageHeader;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageHeader_init_default               {_MessageCategory_MIN, 0, 0}
#define MessageHeader_init_zero                  {_MessageCategory_MIN, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageHeader_category_tag               1
#define MessageHeader_type_tag                   2
#define MessageHeader_error_tag                  3

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageHeader_fields[4];

/* Maximum encoded size of messages (where known) */
#define MessageHeader_size                       19

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MIRABUILTIN_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
